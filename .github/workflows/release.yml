name: Build and Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

permissions:
  contents: write

jobs:
  build:
    name: Build for ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: linux-amd64
            goos: linux
            goarch: amd64
          - os: ubuntu-latest
            target: linux-arm64
            goos: linux
            goarch: arm64
          - os: macos-latest
            target: darwin-amd64
            goos: darwin
            goarch: amd64
          - os: macos-latest
            target: darwin-arm64
            goos: darwin
            goarch: arm64
          - os: windows-latest
            target: windows-amd64
            goos: windows
            goarch: amd64
            extension: .exe

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.21'

      - name: Build binary
        env:
          CGO_ENABLED: 0
          GOOS: ${{ matrix.goos }}
          GOARCH: ${{ matrix.goarch }}
        run: go build -ldflags="-s -w" -o dist/rust-local-playground-${{ matrix.target }}${{ matrix.extension || '' }} .

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: rust-local-playground-${{ matrix.target }}
          path: dist/rust-local-playground-${{ matrix.target }}*

  release:
    name: Create Release
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts/
          merge-multiple: true

      - name: Create Release
        uses: softprops/action-gh-release@v2.3.0
        with:
          files: artifacts/rust-local-playground-*
          generate_release_notes: true
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}